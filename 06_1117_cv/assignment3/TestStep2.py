import unittest
import SeamCarving as sc
import numpy as np
import importlib
importlib.reload(sc)

class TestSeamCarving(unittest.TestCase):
    
    def test_findSeam1(self):
        """ STEP2 test pattern 1 """
        s = sc.SeamCarving(None, None)
        energy_map = np.array([[0.64082954, 0.86707445, 0.84522626, 0.67488221, 0.11480535],
       [0.14848895, 0.49889536, 0.35696566, 0.44663222, 0.14794706],
       [0.23379714, 0.234789  , 0.17500955, 0.17602102, 0.44175666],
       [0.42313116, 0.1642434 , 0.00949124, 0.12514806, 0.68511774],
       [0.08322018, 0.53933974, 0.46198338, 0.29038712, 0.76924859]])

        seam = s.findSeam(energy_map)
        self.assertEqual(seam.tolist(), np.array([4, 4, 3, 2, 3]).tolist())

    def test_findSeam2(self):
        """ STEP2 test pattern 2 """
        s = sc.SeamCarving(None, None)
        energy_map = np.array([[0.76936701, 0.91850576, 0.17252934, 0.23088858, 0.7664649 ,
        0.83521255, 0.27871662, 0.71301298, 0.99099126, 0.95111812],
       [0.52773921, 0.69065764, 0.38284614, 0.3472353 , 0.15123747,
        0.54437777, 0.5391209 , 0.99912512, 0.27187348, 0.47905231],
       [0.55028571, 0.06605368, 0.58958157, 0.04105934, 0.05177725,
        0.21366317, 0.66858216, 0.57710813, 0.02201396, 0.73049046],
       [0.54718792, 0.59305811, 0.6878531 , 0.44557158, 0.35100987,
        0.53692395, 0.27843814, 0.4290921 , 0.41791916, 0.87446811],
       [0.54388593, 0.83084075, 0.26245649, 0.13113078, 0.72738456,
        0.89535566, 0.9681035 , 0.21029931, 0.79126762, 0.82651131],
       [0.44695915, 0.76541718, 0.66096606, 0.51172898, 0.34252648,
        0.72743615, 0.1599266 , 0.55133882, 0.04753343, 0.88106327],
       [0.5911518 , 0.35019002, 0.50724525, 0.98484719, 0.65492129,
        0.26641295, 0.63258859, 0.10467607, 0.30033907, 0.55967108],
       [0.38371958, 0.24088809, 0.8423044 , 0.46880663, 0.45934334,
        0.27618331, 0.29246638, 0.23519582, 0.31854672, 0.01189138],
       [0.95377286, 0.46929819, 0.6337073 , 0.65036555, 0.85290716,
        0.68634883, 0.42233156, 0.69383855, 0.71220906, 0.04428961],
       [0.17745501, 0.62377597, 0.78885683, 0.511248  , 0.044311  ,
        0.32184142, 0.50969687, 0.41103519, 0.06763231, 0.92320414]])

        seam = s.findSeam(energy_map)
        self.assertEqual(seam.tolist(), np.array([3, 4, 5, 6, 7, 8, 8, 9, 9, 8]).tolist())


    def test_findSeam3(self):
        """ STEP2 test pattern 3 """
        s = sc.SeamCarving(None, None)
        energy_map = np.array([[0.32419781, 0.41750454, 0.50521142, 0.89535642, 0.48934674,
        0.4567023 , 0.52229936, 0.18444338, 0.52230123, 0.02374514,
        0.47767598, 0.00297117, 0.14191591, 0.94154356, 0.36400172,
        0.98132806, 0.16690557, 0.79936077, 0.36197993, 0.48230624],
       [0.73337958, 0.82905692, 0.38003715, 0.87983431, 0.80235905,
        0.95801   , 0.22330751, 0.0291786 , 0.83321132, 0.09781159,
        0.70923044, 0.38645304, 0.48872926, 0.55529106, 0.22250529,
        0.84324945, 0.45469125, 0.39093406, 0.72327194, 0.86371153],
       [0.32968555, 0.72441321, 0.83442988, 0.67924897, 0.88343518,
        0.21915865, 0.57763297, 0.11122931, 0.89247893, 0.0532027 ,
        0.04724952, 0.18023429, 0.89009251, 0.66689218, 0.66229103,
        0.29981916, 0.89890066, 0.67680131, 0.19202224, 0.77961204],
       [0.88757252, 0.60782309, 0.1622314 , 0.27315358, 0.37234772,
        0.09701135, 0.59230749, 0.03458198, 0.44575332, 0.78376668,
        0.01011537, 0.04169609, 0.21320312, 0.85180194, 0.22532856,
        0.82409838, 0.77944186, 0.81168031, 0.61686776, 0.2832123 ],
       [0.8591583 , 0.22720419, 0.48000826, 0.6514127 , 0.94062824,
        0.85777328, 0.09984331, 0.61069248, 0.59184906, 0.02378183,
        0.8738361 , 0.05232146, 0.97898489, 0.57071576, 0.65357943,
        0.86486441, 0.18529948, 0.15077303, 0.06913039, 0.56032353],
       [0.38177438, 0.72738164, 0.42183375, 0.84325222, 0.46897915,
        0.01205072, 0.79203871, 0.82683101, 0.38436032, 0.616794  ,
        0.57240133, 0.03787551, 0.87347585, 0.72943251, 0.94586734,
        0.01730664, 0.17068885, 0.36470917, 0.36227792, 0.25066138],
       [0.16432829, 0.82015917, 0.48972071, 0.24596763, 0.33931197,
        0.66214243, 0.41846644, 0.10617377, 0.50456586, 0.36863846,
        0.69237738, 0.07575128, 0.83915776, 0.5471324 , 0.90075147,
        0.83176312, 0.88954012, 0.81033095, 0.77477236, 0.02906334],
       [0.14333519, 0.51661653, 0.10567794, 0.06339568, 0.80506376,
        0.42918098, 0.31564633, 0.82891307, 0.30588079, 0.45546767,
        0.00271889, 0.74954579, 0.53036318, 0.52784678, 0.88110319,
        0.97961199, 0.94544848, 0.46440198, 0.61272319, 0.38427634],
       [0.45022905, 0.82153283, 0.32482273, 0.86122103, 0.66235151,
        0.13554312, 0.14752315, 0.61925301, 0.96141759, 0.11183803,
        0.10039114, 0.28464635, 0.24963352, 0.74846924, 0.60996289,
        0.98698872, 0.1615538 , 0.63804746, 0.65184753, 0.68506004],
       [0.74238722, 0.02697612, 0.68935629, 0.60858928, 0.64675049,
        0.04125826, 0.71580403, 0.51915529, 0.05961909, 0.91447834,
        0.19577564, 0.35875939, 0.65387967, 0.31307486, 0.67817231,
        0.62776975, 0.33046447, 0.43545841, 0.33435257, 0.46028175],
       [0.95582934, 0.15637468, 0.80162404, 0.42518205, 0.95330787,
        0.50156659, 0.66285033, 0.24371335, 0.54123454, 0.84593869,
        0.24476923, 0.34276623, 0.1763811 , 0.64090247, 0.46017153,
        0.42916006, 0.1139121 , 0.69077152, 0.28959114, 0.72242715],
       [0.20312847, 0.65987011, 0.46629765, 0.88660209, 0.54223823,
        0.29265723, 0.43531947, 0.44584275, 0.8395    , 0.76614862,
        0.29559676, 0.00201552, 0.45168   , 0.86616904, 0.15066933,
        0.72638717, 0.74330925, 0.25130803, 0.92022632, 0.36295937],
       [0.29544078, 0.16434886, 0.09430615, 0.05892662, 0.95305907,
        0.26191423, 0.61976211, 0.26763794, 0.08477449, 0.02963025,
        0.85343744, 0.83089545, 0.90935918, 0.99999656, 0.23668262,
        0.1960701 , 0.31499205, 0.26265681, 0.73299162, 0.97254828],
       [0.54829968, 0.59918607, 0.28595994, 0.56967885, 0.88955282,
        0.11021302, 0.81261988, 0.25017704, 0.21648141, 0.69973309,
        0.26543423, 0.81896611, 0.44298761, 0.05668915, 0.24613573,
        0.95185386, 0.50389446, 0.67409583, 0.77723673, 0.60502533],
       [0.60701007, 0.98015934, 0.9572374 , 0.79047803, 0.26340902,
        0.41593329, 0.9855258 , 0.15230047, 0.30560779, 0.95005849,
        0.51792182, 0.43887988, 0.31826321, 0.68677509, 0.37209683,
        0.97694523, 0.54734653, 0.10787684, 0.65442019, 0.03500224],
       [0.08271557, 0.94095499, 0.01359872, 0.01556208, 0.67875106,
        0.93861876, 0.95992295, 0.33712409, 0.50713207, 0.72290811,
        0.35843028, 0.22598939, 0.1161856 , 0.76861847, 0.44584972,
        0.91179287, 0.78652234, 0.54451405, 0.77260717, 0.48834357],
       [0.03380026, 0.73165609, 0.03032428, 0.52195928, 0.92260007,
        0.38066589, 0.1286688 , 0.79585128, 0.89272279, 0.82826126,
        0.12066276, 0.35136228, 0.76871382, 0.65779684, 0.98129182,
        0.84640619, 0.58836908, 0.71278142, 0.45234576, 0.15078458],
       [0.63104642, 0.70828052, 0.21637993, 0.37145822, 0.86177927,
        0.27100358, 0.90134769, 0.86640227, 0.31449457, 0.52436007,
        0.00884934, 0.53858807, 0.86907647, 0.02820507, 0.61874317,
        0.07665059, 0.27946422, 0.27241887, 0.82742886, 0.13181863],
       [0.21009522, 0.71833419, 0.82371779, 0.70474896, 0.35765968,
        0.78932446, 0.63973196, 0.71221093, 0.41263269, 0.82804062,
        0.64788744, 0.99985244, 0.95437194, 0.08197372, 0.82149316,
        0.61961997, 0.82191774, 0.97637343, 0.70729738, 0.05792029],
       [0.28515967, 0.05457672, 0.54254795, 0.64677823, 0.47505239,
        0.47773992, 0.03430837, 0.9205814 , 0.20773108, 0.48965331,
        0.80597943, 0.2308011 , 0.84661453, 0.05188395, 0.01557547,
        0.7400828 , 0.1091788 , 0.61709539, 0.1264931 , 0.44901022]])
        
        seam = s.findSeam(energy_map)
        self.assertEqual(seam.tolist(), np.array([ 9,  9, 10, 10, 11, 11, 11, 10, 10, 10, 10, 10,  9, 10, 11, 12, 13,
       13, 13, 14]).tolist())
        
        
if __name__ == '__main__': 
    unittest.main(argv=['first-arg-is-ignored'], exit=False, verbosity=2)
